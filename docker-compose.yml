version: '3'

networks:
  datapipeline:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.18.0.0/16"

services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      datapipeline:
        ipv4_address: 172.18.0.3

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    hostname: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092

      - KAFKA_CFG_ZOOKEEPER_CONNECT=172.18.0.3:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      datapipeline:
        ipv4_address: 172.18.0.4

  kafka_gui:
        image: quay.io/cloudhut/kowl:v1.4.0
        container_name: kafka_gui
        volumes:
          - ./Collect_Data/config.yml:/config.yml
        ports:
          - "8080:8080"
        entrypoint: ./kowl --config.filepath=/config.yml
        depends_on:
          - zookeeper
          - kafka
        mem_limit: 1G
        cpus: 0.5
        restart: always
        networks:
          datapipeline:
            ipv4_address: 172.18.0.5

  python:
    image: 'python:3.7'
    container_name: python
    hostname: python
    volumes:
          - ./Collect_Data/src:/workspace
    ports:
      - '5000:5000'
    stdin_open: true
    tty: true
    networks:
      datapipeline:
        ipv4_address: 172.18.0.6

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data:/data/db
    ports:
      - 27017:27017
    networks:
      datapipeline:
        ipv4_address: 172.18.0.7


